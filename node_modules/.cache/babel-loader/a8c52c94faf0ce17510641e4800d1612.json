{"ast":null,"code":"var _jsxFileName = \"/Users/sophiebishopp/Documents/GitHub/09-TodoReactNewRepository/todoreactnew/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Todo from './Todo';\nimport NewTodo from './NewTodo';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: []\n    };\n    this.onChange = this.onChange.bind(this);\n    this.addTodo = this.addTodo.bind(this);\n    this.completeTodo = this.completeTodo.bind(this);\n    this.deleteTodo = this.deleteTodo.bind(this);\n    this.sort = this.sort.bind(this);\n  }\n\n  onChange(event) {\n    this.setState({\n      input: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    // loading my todos -- on load\n    var self = this;\n    var createRequest = new XMLHttpRequest();\n    var apiKey = \"63c8781cb57d5a1dd3c693f8eb6ac6f7df70b75acaeab31ccdd9952de8554e29\";\n\n    createRequest.onreadystatechange = function () {\n      if (this.readyState === 4 && this.status === 200) {\n        // save new Todo to state\n        var todoList = JSON.parse(this.responseText);\n        self.setState({\n          todos: todoList\n        }); // clear the input field\n\n        self.setState({\n          input: ''\n        });\n      }\n    };\n\n    createRequest.open(\"GET\", \"https://api.kraigh.net/todos\", true);\n    createRequest.setRequestHeader(\"x-api-key\", apiKey);\n    createRequest.send();\n  }\n\n  addTodo(event) {\n    // read the input value from state\n    const newTodoText = {\n      text: this.state.input\n    };\n    var apiKey = \"63c8781cb57d5a1dd3c693f8eb6ac6f7df70b75acaeab31ccdd9952de8554e29\"; // Do AJAX\n\n    var self = this;\n    event.preventDefault();\n    var createRequest = new XMLHttpRequest();\n\n    createRequest.onreadystatechange = function () {\n      if (this.readyState === 4 && this.status === 200) {\n        var returnedTodo = JSON.parse(this.responseText);\n        var todos = self.state.todos;\n        todos.push(returnedTodo);\n        self.setState({\n          todos: todos\n        });\n      } else if (this.readyState === 4) {\n        console.log(this.responseText);\n      }\n    };\n\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    const apiurl = \"https://api.kraigh.net/todos\";\n    createRequest.open(\"POST\", proxyurl + apiurl, true);\n    createRequest.setRequestHeader(\"Content-type\", \"application/json\");\n    createRequest.setRequestHeader(\"x-api-key\", apiKey);\n    createRequest.send(JSON.stringify(newTodoText)); // Inside your AJAX success\n\n    this.state.input = '';\n  }\n\n  completeTodo(todoID, completed) {\n    var apiKey = \"63c8781cb57d5a1dd3c693f8eb6ac6f7df70b75acaeab31ccdd9952de8554e29\";\n    var data = {\n      completed: completed\n    };\n    var self = this; //API call to PUT - to set completed to true\n\n    var editRequest = new XMLHttpRequest();\n\n    editRequest.onreadystatechange = function () {\n      if (this.readyState === 4 && this.status === 200) {\n        var newTodos = [];\n\n        for (var todo in self.state.todos) {\n          const thisTodo = self.state.todos[todo];\n\n          if (self.state.todos[todo].id === todoID) {\n            thisTodo.completed = completed;\n          }\n\n          newTodos.push(thisTodo);\n        }\n\n        self.setState({\n          todos: newTodos\n        });\n      } else if (this.readyState === 4) {}\n    };\n\n    const apiurl = \"https://api.kraigh.net/todos/\" + todoID;\n    editRequest.open(\"PUT\", apiurl, true);\n    editRequest.setRequestHeader(\"Content-type\", \"application/json\");\n    editRequest.setRequestHeader(\"x-api-key\", apiKey);\n    editRequest.send(JSON.stringify(data));\n  }\n\n  deleteTodo(todoID) {\n    var apiKey = \"63c8781cb57d5a1dd3c693f8eb6ac6f7df70b75acaeab31ccdd9952de8554e29\";\n    var deleteRequest = new XMLHttpRequest();\n    var self = this;\n\n    deleteRequest.onreadystatechange = function () {\n      if (this.readyState === 4 && this.status === 200) {\n        var newTodos = [];\n\n        for (var todo in self.state.todos) {\n          if (self.state.todos[todo].id !== todoID) {\n            newTodos.push(self.state.todos[todo]);\n          }\n        }\n\n        self.setState({\n          todos: newTodos\n        });\n      } else if (this.readyState === 4) {}\n    };\n\n    deleteRequest.open(\"DELETE\", \"https://api.kraigh.net/todos/\" + todoID, true);\n    deleteRequest.setRequestHeader(\"Content-type\", \"application/json\");\n    deleteRequest.setRequestHeader(\"x-api-key\", apiKey);\n    deleteRequest.send();\n  }\n\n  sort(event) {\n    var self = this;\n    const sorted = self.state.todos.sort(function (a, b) {\n      return parseFloat(b.created) - parseFloat(a.created);\n    });\n    self.setState({\n      todos: sorted\n    });\n  }\n\n  render() {\n    {\n      console.log(this.state.todos);\n    }\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      id: \"ToDoList\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"sortButton\",\n      onClick: this.sort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Sort\"), React.createElement(NewTodo, {\n      addTodo: this.addTodo,\n      onChange: this.onChange,\n      input: this.state.input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), this.state.todos.map(todo => React.createElement(Todo, {\n      key: todo.id,\n      id: todo.id,\n      completed: todo.completed,\n      text: todo.text,\n      deleteTodo: this.deleteTodo,\n      completeTodo: this.completeTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sophiebishopp/Documents/GitHub/09-TodoReactNewRepository/todoreactnew/src/App.js"],"names":["React","Component","Todo","NewTodo","App","constructor","props","state","todos","onChange","bind","addTodo","completeTodo","deleteTodo","sort","event","setState","input","target","value","componentDidMount","self","createRequest","XMLHttpRequest","apiKey","onreadystatechange","readyState","status","todoList","JSON","parse","responseText","open","setRequestHeader","send","newTodoText","text","preventDefault","returnedTodo","push","console","log","proxyurl","apiurl","stringify","todoID","completed","data","editRequest","newTodos","todo","thisTodo","id","deleteRequest","sorted","a","b","parseFloat","created","render","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Todo from './Todo';\nimport NewTodo from './NewTodo';\n\nclass App extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        todos: []\n      }\n      this.onChange = this.onChange.bind(this);\n      this.addTodo = this.addTodo.bind(this);\n      this.completeTodo = this.completeTodo.bind(this);\n      this.deleteTodo = this.deleteTodo.bind(this);\n      this.sort = this.sort.bind(this);\n    }\n\n    onChange(event) {\n      this.setState({\n        input: event.target.value\n      });\n    }\n\n  componentDidMount() { // loading my todos -- on load\n    var self = this;\n    var createRequest = new XMLHttpRequest();\n    var apiKey = \"63c8781cb57d5a1dd3c693f8eb6ac6f7df70b75acaeab31ccdd9952de8554e29\";\n\n    createRequest.onreadystatechange = function () {\n      if (this.readyState === 4 && this.status === 200) {\n      // save new Todo to state\n        var todoList = (JSON.parse(this.responseText));\n        self.setState({\n            todos: todoList\n        });\n      // clear the input field\n      self.setState({input: ''});\n      }\n    }\n    createRequest.open(\"GET\", \"https://api.kraigh.net/todos\", true);\n    createRequest.setRequestHeader(\"x-api-key\",apiKey);\n    createRequest.send();\n  }\n\n  addTodo(event){\n    // read the input value from state\n    const newTodoText = {text: this.state.input};\n    var apiKey = \"63c8781cb57d5a1dd3c693f8eb6ac6f7df70b75acaeab31ccdd9952de8554e29\";\n\n    // Do AJAX\n    var self = this;\n    event.preventDefault();\n\n    var createRequest = new XMLHttpRequest();\n    createRequest.onreadystatechange =  function(){\n      if(this.readyState === 4 && this.status === 200){\n        var returnedTodo = (JSON.parse(this.responseText));\n        var todos = self.state.todos;\n        todos.push(returnedTodo);\n        self.setState({todos: todos});\n      }else if(this.readyState === 4){\n        console.log(this.responseText);\n      }\n    }\n\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    const apiurl = \"https://api.kraigh.net/todos\";\n    createRequest.open(\"POST\", proxyurl + apiurl, true);\n    createRequest.setRequestHeader(\"Content-type\", \"application/json\");\n    createRequest.setRequestHeader(\"x-api-key\", apiKey);\n    createRequest.send(JSON.stringify(newTodoText));\n\n    // Inside your AJAX success\n    this.state.input = '';\n  }\n\n  completeTodo(todoID, completed){\n    var apiKey = \"63c8781cb57d5a1dd3c693f8eb6ac6f7df70b75acaeab31ccdd9952de8554e29\";\n\n    var data = {\n      completed: completed\n    };\n    var self = this;\n    //API call to PUT - to set completed to true\n    var editRequest = new XMLHttpRequest();\n    editRequest.onreadystatechange = function(){\n      if(this.readyState === 4 && this.status === 200){\n        var newTodos = [];\n        for(var todo in self.state.todos){\n          const thisTodo = self.state.todos[todo];\n          if(self.state.todos[todo].id === todoID){\n            thisTodo.completed = completed;\n          }\n          newTodos.push(thisTodo);\n\n        }\n        self.setState({todos: newTodos});\n      }else if(this.readyState === 4){\n\n      }\n    }\n    const apiurl = \"https://api.kraigh.net/todos/\" + todoID;\n    editRequest.open(\"PUT\", apiurl, true);\n    editRequest.setRequestHeader(\"Content-type\", \"application/json\");\n    editRequest.setRequestHeader(\"x-api-key\", apiKey);\n    editRequest.send(JSON.stringify(data));\n  }\n\n  deleteTodo(todoID){\n    var apiKey = \"63c8781cb57d5a1dd3c693f8eb6ac6f7df70b75acaeab31ccdd9952de8554e29\";\n\n    var deleteRequest = new XMLHttpRequest();\n    var self = this;\n    deleteRequest.onreadystatechange = function(){\n      if(this.readyState === 4 && this.status === 200){\n        var newTodos = [];\n        for(var todo in self.state.todos){\n          if(self.state.todos[todo].id !== todoID){\n            newTodos.push(self.state.todos[todo]);\n          }\n        }\n        self.setState({todos: newTodos});\n      }else if(this.readyState === 4){\n\n      }\n    }\n    deleteRequest.open(\"DELETE\", \"https://api.kraigh.net/todos/\" + todoID, true);\n    deleteRequest.setRequestHeader(\"Content-type\", \"application/json\");\n    deleteRequest.setRequestHeader(\"x-api-key\", apiKey);\n    deleteRequest.send();\n  }\n\n  sort(event){\n    var self = this;\n\n    const sorted = self.state.todos.sort(function (a, b) {\n      return parseFloat(b.created) - parseFloat(a.created);\n    });\n\n    self.setState({todos: sorted});\n  }\n\n  render() {\n    {console.log(this.state.todos)}\n    return (\n      <div>\n        <section id=\"ToDoList\">\n          <button id=\"sortButton\" onClick={this.sort}>Sort</button>\n          <NewTodo addTodo={this.addTodo} onChange={this.onChange} input={this.state.input} />\n\n          {this.state.todos.map((todo) =>\n            <Todo key={todo.id} id={todo.id} completed={todo.completed} text={todo.text} deleteTodo={this.deleteTodo} completeTodo={this.completeTodo}/>\n          )}\n        </section>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}